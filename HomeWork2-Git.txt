GIT Homework 1
Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub
Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

===================
JSON
 4. Создать внешний репозиторий c названием JSON.     [New repository =>> JSON ]
 5. Клонировать репозиторий JSON на локальный компьютер.   [Clone =>> выбираем вкладку https =>> copy  =>> переходим в bush  =>>  git clone https://github.com/HannaMironovich/JSON.git =>> cd JSON (заходим в папку JSON) //в названии строки должно быть написано (main)]
 6. Внутри локального JSON создать файл “new.json”.     [touch new.json]
 7. Добавить файл под гит.  [git add new.json]  {проверяем статус =>>  git status (показывает, что файл добавлен в отслеживание)}
 8. Закоммитить файл.   [git commit -m "add file new.json"]
 9. Отправить файл на внешний GitHub репозиторий.    [git push  =>>  проверили на GitHub файл появился.]
 10. Отредактировать содержание файла “new.json” - написать информацию о себе
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. [vim new.json  =>> записываем в формате json нужную информацию  ( {"ключ":"значение"} =>> esc> :wq)]
 11. Отправить изменения на внешний репозиторий.[git status (проверяю статус) =>>  git commit - m "change file new.json"  =>> git push, (проверяю на внешнем репоз=изменения появились)]
 
 12. Создать файл preferences.json  [touch preferences.json]
 13. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON.  [vim new.json записываем в формате json нужную информацию  ( {"ключ":"значение"} =>> esc> :wq)]]
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON.   [vim new.json записываем в формате json нужную информацию  ( {"ключ":"значение"} =>> esc> :wq)]]
 15. Отправить сразу 2 файла на внешний репозиторий. /!перед отправкой закоммитить в 1 строку/   [git add . /добавляем в остлеж. файлы// =>> git commit -m "2 new files about preferences and skills" =>> git push]
 
 16. На веб интерфейсе создать файл bug_report.json.   [Заходим во внешний репозиторий JSON =>> Add file =>> Create new file =>> в окне названия файла пишем "bag_report.json" =>>]
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.   [Внизу в окошке Coming changes  =>> пишем комент:"Create bag_report.json"  =>> btn "Commit chsnges"]
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.   [Заходим во внешний репозиторий JSON =>> bag_report.json =>> push icon pensil =>> вносим нужную информацию]
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.   [Внизу в окошке Coming changes  =>> пишем комент: Add bug_report in file rename to bug_report //я неправильно назвала сразу и поэтому переименовала здесь же//]
 20. Синхронизировать внешний и локальный репозиторий JSON.    [в консоли: git fetch =>> git pull]
===
//!!! у меня много комитов будет здесь, пока разобралась как правильно писать синтаксис json накоммитила)) //

===================

XML
 21. Создать внешний репозиторий c названием XML.  [New repository =>> XML]
 22. Клонировать репозиторий XML на локальный компьютер. [Clone =>> выбираем вкладку https =>> copy  =>> переходим в bush  =>>  git clone https://github.com/HannaMironovich/XML.git =>> cd JSON (заходим в папку JSON) //в названии строки должно быть написано (main)]
 23. Внутри локального XML создать файл “new.xml”.   [touch new.xml]
 24. Добавить файл под гит.  [git add new.xml]  {проверяем статус =>>  git status (показывает, что файл добавлен в отслеживание)}
 25. Закоммитить файл.  [git commit -m "add file new.xml"]
 26. Отправить файл на внешний GitHub репозиторий.    [git push  =>>  проверили на GitHub файл появился.]
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате XML.     [vim new.xml  =>> записываем в формате xml нужную информацию  ( через систему тегов  <>...</>  =>> esc> :wq)]
 28. Отправить изменения на внешний репозиторий.   [vim new.xml  =>> записываем в формате xml нужную информацию  ( через систему тегов  <>...</>  =>> esc> :wq)]
 
29. Создать файл preferences.xml   [touch preferences.xml]
 30. В файл preferences.xml добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.   [vim new.xml записываем в формате json нужную информацию  (через систему тегов  <>...</>  =>> esc> :wq)]
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML.    [vim new.xml записываем в формате json нужную информацию  ( через систему тегов  <>...</>  =>> esc> :wq)]]
 32. Сделать коммит в одну строку.    [git add . /добавляем в остлеж. файлы// =>> git commit -m "2 new files about preferences and skills"]
 33. Отправить сразу 2 файла на внешний репозиторий.   [=>> git push]

 34. На веб интерфейсе создать файл bug_report.xml.   [Заходим во внешний репозиторий JSON =>> Add file =>> Create new file =>> в окне названия файла пишем "bag_report.xml" =>>]
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  [Внизу в окошке Coming changes  =>> пишем комент:"Create bag_report.xml"  =>> btn "Commit chsnges"]
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.   [Заходим во внешний репозиторий JSON =>> bag_report.xml =>> push icon pensil =>> вносим нужную информацию]
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  [Внизу в окошке Coming changes  =>> пишем комент: Add bug_report in file rename to bug_report]
 38. Синхронизировать внешний и локальный репозиторий XML.   [в консоли: git fetch =>> git pull]

==================
TXT
 1. Создать внешний репозиторий c названием TXT.  [New repository =>> TXT]
 2. Клонировать репозиторий TXT на локальный компьютер.   [Clone =>> выбираем вкладку https =>> copy  =>> переходим в bush  =>>  git clone https://github.com/HannaMironovich/TXT.git =>> cd JSON (заходим в папку JSON) //в названии строки должно быть написано (main)]
 3. Внутри локального TXT создать файл “new.txt”.  [touch new.txt]
 4. Добавить файл под гит.  [git add new.json]  {проверяем статус =>>  git status (показывает, что файл добавлен в отслеживание)}
 5. Закоммитить файл.   [git commit -m "add file new.txt"]
 6. Отправить файл на внешний GitHub репозиторий.   [git push  =>>  проверили на GitHub файл появился.]
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.  [vim new.txt  =>> записываем в формате txt нужную информацию  =>> esc> :wq]
 8. Отправить изменения на внешний репозиторий.   [vim new.txt  =>> записываем в формате json нужную информацию  ( {"ключ":"значение"} =>> esc> :wq)]
 
9. Создать файл preferences.txt   [touch preferences.json]
 10. В файл preferences.txt” добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.    [vim new.txt ззаписываем в формате txt нужную информацию  =>> esc> :wq)]]
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT   [vim new.txt записываем в формате txt нужную информацию  =>> esc> :wq)]]
 12. Сделать коммит в одну строку.     [git add . /добавляем в остлеж. файлы// =>> git commit -m "2 new files about preferences and skills"]
 13. Отправить сразу 2 файла на внешний репозиторий.   [=>> git push]
 
14. На веб интерфейсе создать файл bug_report.txt.   [Заходим во внешний репозиторий JSON =>> Add file =>> Create new file =>> в окне названия файла пишем "bag_report.txt" =>>]
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.   [Внизу в окошке Coming changes  =>> пишем комент:"Create bag_report.txt"  =>> btn "Commit chsnges"]
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.   [Заходим во внешний репозиторий JSON =>> bag_report.txt =>> push icon pensil =>> вносим нужную информацию]
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.   [Внизу в окошке Coming changes  =>> пишем комент: Add bug_report in file rename to bug_report]
 18. Синхронизировать внешний и локальный репозиторий TXT.   [в консоли: git fetch =>> git pull]

======================================
/Коммитов может быть больше, так как я находила неточности и исправляла их, а еще пыталась понять как все таки писать в форматах json и xml.

